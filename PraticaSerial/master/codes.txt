Enviando e recebendo MASTER:
#include <SoftwareSerial.h>

SoftwareSerial ArduinoSlave(10, 11);

char cmd = "";
char old_cmd;
char answer = "";
char old_answer;

void setup() {
  Serial.begin(9600);
  Serial.println("ENTER Commands:");
  ArduinoSlave.begin(9600);
}

void loop() {
  old_cmd = cmd;
  old_answer = answer;

  if (Serial.available()) {
    cmd = Serial.read();
  }
  if (ArduinoSlave.available()) {
    answer = ArduinoSlave.read();
  }

  if (cmd != old_cmd) {
    Serial.print("Master sent: ");
    Serial.println(cmd);
    ArduinoSlave.write(cmd);
  }
  if (answer != old_answer) {
    Serial.print("Slave received: ");
    Serial.println(answer);
  }
}
============END=OF=CODE============
Enviando e recebendo valores MASTER:
#include <SoftwareSerial.h>

SoftwareSerial ArduinoSlave(10, 11);

String answer;
String msg;
int sensorValue = 0, oldSensorValue = 0;

void setup() {
  Serial.begin(9600);
  Serial.println("ENTER Commands");
  ArduinoSlave.begin(9600);
}

void loop() {
  sensorValue = analogRead(A0);

  readSlavePort();

  if (oldSensorValue != sensorValue) {
    Serial.print("Master sent: ");
    Serial.println(sensorValue);
    ArduinoSlave.print(sensorValue);
    oldSensorValue = sensorValue;
  }

  if (answer != "") {
    Serial.print("Slave LED PWM Value: ");
    Serial.println(answer);
    answer = "";
  }

  delay(1000);
}

void readSlavePort() {
  while(ArduinoSlave.available()) {
    delay(10);
    if (ArduinoSlave.available() > 0) {
      char c = ArduinoSlave.read();
      answer += c;
    }
  }
}
============END=OF=CODE============